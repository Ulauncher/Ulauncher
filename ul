#!/usr/bin/env bash

. scripts/common.sh
. scripts/help.sh
. scripts/tests.sh
. scripts/dev-container.sh
. scripts/build-deb.sh
. scripts/build-targz.sh
. scripts/build-doc.sh
. scripts/send-signal.sh
. scripts/watch-doc.sh
. scripts/edit-ui.sh


main () {
  case "$1" in
    version) exec python3 -c "import ulauncher; print(ulauncher.version)" ;;
    run) exec ./bin/ulauncher -v --dev $2 ;;
    run-nix) exec nix run --show-trace --print-build-logs '.#default' -- "${@:2}" ;;
    test-black) test-black ;;
    test-mypy) test-mypy ;;
    test-ruff) test-ruff ;;
    test-typos) test-typos ;;
    test-pytest) test-pytest ;;
    test) test-mypy && test-black && test-ruff && test-typos && test-pytest ;;
    dev-container) dev-container $2 ;;
    send-signal) send-signal $2 ;;
    edit-ui) edit-ui $2 ;;
    build-deb) build-deb ;;
    release-deb) release-deb "${@:2}" ;;
    sdist) build-targz ;;
    build-nix) exec nix build --out-link nix/result --show-trace --print-build-logs "${@:2}" '.#default' ;;
    build-nix-dev) exec nix build --out-link nix/dev --show-trace --print-build-logs "${@:2}" '.#development' ;;
    build-doc) build-doc ;;
    watch-doc) watch-doc ;;

    *)
      echo "${red}[!] Unrecognized command '${1}'${normal}"
      echo
      help
      exit 1
      ;;
  esac
}

if [ $# -eq 0 ]; then
  help
else
  main "$@"
fi
